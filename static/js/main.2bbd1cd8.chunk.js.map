{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","charAt","slice","filter","element","Alert","height","alert","word","lower","capitalize","msg","About","myStyle","aria-labelledby","data-bs-parent","App","setMode","setAlert","message","setTimeout","document","body","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bbd1cd8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                        </form> */}\r\n\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"UpperCase Was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted To Uppercase\", \"success\");\r\n    }\r\n\r\n\r\n    const handleLoClick = () => {\r\n        // console.log(\"UpperCase Was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted To Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied To Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n    }\r\n\r\n    const handleCapitalize = () => {\r\n\r\n        let firstchar = text.charAt(0); // storing the first char of the string\r\n        let newText = firstchar.toUpperCase(); // converting that to uppercase\r\n        setText(newText + text.slice(1)); // printing it with rest excluding the first char by using slice\r\n        props.showAlert(\"Text Has Been Capitalize Now\", \"success\");\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared !!!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1 className=\"mb-4\">{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#242B2E' : '#F4F1F1', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn-primary mx-2 my-1\" onClick={handleCapitalize}>Capitalize</button>\r\n\r\n                <button disabled={text.length === 0} className=\"btn-primary mx-2 my-1\" onClick={handleClear}>Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element) => { return element.length !== 0 }).length} Minutes To Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Nothing To Preview !!!\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{ height: '50px' }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>\r\n                    {capitalize(props.alert.type)}\r\n                </strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#0D0D0D',\r\n        backgroundColor: props.mode === 'dark' ? '#242B2E' : '#F4F1F1'\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#0D0D0D' }}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>\r\n                                Analyze Your Text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Textutils gives you a way to analyze your text quickly and efficiently. It is a word counter and a character counting utility which can be used to manipulate your text in the way you want. You can remove extra spaces, copy the manipulated text as well as convert your text from Uppercase to lowercase and lowercase to Uppercase\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>\r\n                                Free To Use\r\n                            </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus, it is suitable for writing text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>\r\n                                Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether Dark Mode is enabled Or Not\n  const [alert, setAlert] = useState(null)//Whether DArk is mode is enabled or noit???\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has Been Enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Text_Utils\" mode={mode} toggleMode={toggleMode} />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/gh-pages-url\">\n              <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Remove Extra Spaces....\" mode={mode} />\n            </Route>\n            <Route exact path=\"/gh-pages-url/about\">\n              <About mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}